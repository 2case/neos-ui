sudo: false
language: node_js
notifications:
  email: false
services:
  - mysql
addons:
  sauce_connect: true
matrix:
  fast_finish: true
  include:
    - php: 5.6
      env: DB=mysql

#
# Cache the composer and node_modules directory to speeden up the the installation of dependencies.
#
cache:
  directories:
    - node_modules
    - $HOME/.composer/cache

#
# Install dependencies for other services & expose the commit message for SauceLabs.
# The export cannot be placed in the `env` section since there are usecases where this isn't reliable.
# @see https://github.com/mapbox/node-pre-gyp/issues/196
#
before_install:
  - npm i -g codeclimate-test-reporter
  - "export COMMIT_MESSAGE=\"$(git log --format=%B --no-merges -n 1)\""
  - export FLOW_CONTEXT=Test

  # Create the running neos instance for the behavior tests.
  - cd ..
  - mkdir Neos
  - cp PackageFactory.Guevara/Build/TravisCi/composer* Neos/
  - cd Neos
  - mv ../PackageFactory.Guevara Packages/Application/

  # Install composer since it is not available in the TravisCI nodejs scope.
  - curl https://getcomposer.org/installer | php
  - php composer.phar composer install -q

  # Remove the default login package since our routes currenctly conflicts it.
  - rm -rf Packages/Plugins/Flowpack.Neos.FrontendLogin

  # Create the test database and move the configuration files into place.
  - mysql -e 'create database neos collate utf8_unicode_ci;'
  - cp Packages/Application/PackageFactory.Guevara/Build/TravisCi/Settings.yaml Configuration/Settings.yaml

  # Setup the database scheme and import the demo site package.
  - ./flow cache:warmup
  - ./flow doctrine:migrate
  - ./flow site:import --package-key=TYPO3.NeosDemoTypo3Org

  # Create the demo backend user.
  - ./flow user:create --username=johndoe --password=demo --first-name=John --last-name=Doe --roles=TYPO3.Neos:Administrator

  # Start the development server.
  - ./flow server:run --port 8081 &

  # Give the server some time to start...
  - sleep 3

  # Change back into the repository directory where the tests will be executed.
  - cd Packages/Application/PackageFactory.Guevara

#
# Since we cache the node_modules folder,
# we should prune it to remove extranous packages from older runs.
#
before_script:
  - npm prune

#
# In case a script has failed, we want a more precise output by Travis CI on which script has exited with `0`.
# If we stick with the basic `npm test` command, we would only get the message `The script npm test has exited with code 0`
# which isn't that informative at all.
#
script:
  - npm run lint
  - npm run karma
  - npm run selenium:run

#
# Publish the code coverage to codeclimate.com once the tests have passed.
#
after_script:
  - mv Coverage/**/lcov.info .
  - codeclimate-test-reporter < lcov.info
